# docker-compose.yml
# Enhanced configuration with AI agents using Microsoft Agent Framework

version: "3.8"

services:
  agent-1:
    build:
      context: ./agent-image
    container_name: agent-1
    volumes:
      - ./agent-1-code:/app
      - ./shared/logs:/logs
      - ./shared/workspace:/workspace
    env_file:
      - .env
    environment:
      - AGENT_NAME=Developer-Agent
      - AGENT_ROLE=developer
      - APPROVAL_REQUIRED=false  # ‚Üê SEMI-AUTONOMOUS MODE!
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/main.py || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  agent-2:
    build:
      context: ./agent-image
    container_name: agent-2
    volumes:
      - ./agent-2-code:/app
      - ./shared/logs:/logs
      - ./shared/workspace:/workspace
    env_file:
      - .env
    environment:
      - AGENT_NAME=CodeReview-Agent
      - AGENT_ROLE=code_reviewer
      - APPROVAL_REQUIRED=true
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/main.py || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  agent-3:
    build:
      context: ./agent-image
    container_name: agent-3
    volumes:
      - ./agent-3-code:/app
      - ./shared/logs:/logs
      - ./shared/workspace:/workspace
    env_file:
      - .env
    environment:
      - AGENT_NAME=Magentic-Manager
      - AGENT_ROLE=orchestrator
      - APPROVAL_REQUIRED=true
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.5'
          memory: 2G
        reservations:
          cpus: '0.75'
          memory: 1G
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/main.py || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  agent-4:
    build:
      context: ./agent-image
    container_name: agent-4
    volumes:
      - ./agent-4-code:/app
      - ./shared/logs:/logs
      - ./shared/workspace:/workspace
      - /var/run/docker.sock:/var/run/docker.sock:ro
    env_file:
      - .env
    environment:
      - AGENT_NAME=DevOps-Agent
      - AGENT_ROLE=devops
      - APPROVAL_REQUIRED=true
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/main.py || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  agent-5:
    build:
      context: ./agent-image
    container_name: agent-5
    volumes:
      - ./agent-5-code:/app
      - ./shared/logs:/logs
      - ./shared/workspace:/workspace
    env_file:
      - .env
    environment:
      - AGENT_NAME=QA-Agent
      - AGENT_ROLE=qa_testing
      - APPROVAL_REQUIRED=true
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '1.0'
          memory: 1G
        reservations:
          cpus: '0.5'
          memory: 512M
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/main.py || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  agent-6:
    build:
      context: ./agent-image
    container_name: agent-6
    volumes:
      - ./agent-6-code:/app
      - ./shared/logs:/logs
      - ./shared/workspace:/workspace
    env_file:
      - .env
    environment:
      - AGENT_NAME=DevUI-Agent
      - AGENT_ROLE=monitoring
      - APPROVAL_REQUIRED=true
      - PYTHONUNBUFFERED=1
    restart: unless-stopped
    deploy:
      resources:
        limits:
          cpus: '0.5'
          memory: 512M
        reservations:
          cpus: '0.25'
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "test -f /app/main.py || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s
